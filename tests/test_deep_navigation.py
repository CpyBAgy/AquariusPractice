"""
–¢–µ—Å—Ç—ã –¥–ª—è —Ç—Ä–µ—Ö –ø–æ–¥—Ö–æ–¥–æ–≤ –≥–ª—É–±–æ–∫–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏:
1. –û–±—ã—á–Ω–∞—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è
2. –£–º–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –ø–æ–∏—Å–∫–æ–º –ø—É—Ç–∏
3. –î–µ–∫–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è
4. Breadcrumb –Ω–∞–≤–∏–≥–∞—Ü–∏—è —Å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ–º –∏—Å—Ç–æ—Ä–∏–∏
"""

import logging

# –ò–º–ø–æ—Ä—Ç—ã –¥–ª—è –æ–±—ã—á–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
from examples.deep_navigation_pages.straight_navigation import (
    AmazonLoginPage,
    AmazonHomePage,
)

# –ò–º–ø–æ—Ä—Ç—ã –¥–ª—è —É–º–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
from examples.deep_navigation_pages.smart_navigation import (
    SmartAmazonHomePage,
    SmartAmazonWifiHelpPage
)

# –ò–º–ø–æ—Ä—Ç—ã –¥–ª—è –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
from examples.deep_navigation_pages.decorator_navigation import (
    DecoratorAmazonHomePage,
)

# –ò–º–ø–æ—Ä—Ç—ã –¥–ª—è breadcrumb –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
from examples.deep_navigation_pages.breadcrumb_navigation import (
    BreadcrumbAmazonHomePage,
)


def test_regular_deep_navigation_full_path(page_factory):
    """
    –¢–µ—Å—Ç –ø–æ–ª–Ω–æ–≥–æ –ø—É—Ç–∏ –æ–±—ã—á–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏:
    Login ‚Üí Home ‚Üí Account ‚Üí Digital Services ‚Üí Fire Tablets ‚Üí WiFi Help
    """
    logging.info("=== –¢–µ—Å—Ç –æ–±—ã—á–Ω–æ–π –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ ===")

    login_page = page_factory.create_page(AmazonLoginPage)
    login_page.open()

    home_page = login_page.login("vancous220@gmail.com", "MyStrongPassword")
    logging.info("‚úÖ –ü–µ—Ä–µ—Ö–æ–¥: Login ‚Üí Home")

    account_page = home_page.go_to_account()
    logging.info("‚úÖ –ü–µ—Ä–µ—Ö–æ–¥: Home ‚Üí Account")

    digital_services_page = account_page.go_to_digital_services()
    logging.info("‚úÖ –ü–µ—Ä–µ—Ö–æ–¥: Account ‚Üí Digital Services")

    fire_tablets_page = digital_services_page.go_to_fire_tablets()
    logging.info("‚úÖ –ü–µ—Ä–µ—Ö–æ–¥: Digital Services ‚Üí Fire Tablets")

    wifi_help_page = fire_tablets_page.go_to_wifi_help()
    logging.info("‚úÖ –ü–µ—Ä–µ—Ö–æ–¥: Fire Tablets ‚Üí WiFi Help")

    assert wifi_help_page.verify_wifi_instructions_present(), "WiFi –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
    logging.info("‚úÖ –ù–∞–π–¥–µ–Ω—ã –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏: 'Access internet by following these steps'")

    instructions = wifi_help_page.get_wifi_instructions()
    assert len(instructions) > 0, "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø—É—Å—Ç—ã"
    logging.info(f"üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ–ª—É—á–µ–Ω—ã: {instructions[:50]}...")

    logging.info("‚úÖ –¢–µ—Å—Ç –æ–±—ã—á–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ")


def test_smart_navigation_direct_path(page_factory):
    """
    –¢–µ—Å—Ç —É–º–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ - –ø—Ä—è–º–æ–π –ø–µ—Ä–µ—Ö–æ–¥ –∫ WiFi Help
    –°–∏—Å—Ç–µ–º–∞ –¥–æ–ª–∂–Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞–π—Ç–∏ –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–π –ø—É—Ç—å
    """
    logging.info("=== –¢–µ—Å—Ç —É–º–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ - –ø—Ä—è–º–æ–π –ø—É—Ç—å ===")

    home_page = page_factory.create_page(SmartAmazonHomePage)
    home_page.open()

    wifi_help_page = home_page.smart_navigate_to(SmartAmazonWifiHelpPage)

    current_page_type = wifi_help_page.get_current_page_type()
    expected_types = ["SmartAmazonWifiHelpPage", "UnknownPage"]
    assert current_page_type in expected_types, f"–ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ç–∏–ø —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {current_page_type}"

    assert wifi_help_page.verify_wifi_instructions_present(), "WiFi –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"

    logging.info("‚úÖ –£–º–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–∏–ª–∞ –ø—Ä—è–º–æ–π –ø–µ—Ä–µ—Ö–æ–¥")


def test_decorator_automatic_navigation(page_factory):
    """
    –¢–µ—Å—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä—ã
    –ú–µ—Ç–æ–¥—ã –¥–æ–ª–∂–Ω—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞–≤–∏–≥–∏—Ä–æ–≤–∞—Ç—å –∫ –Ω—É–∂–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    """
    logging.info("=== –¢–µ—Å—Ç –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–Ω–æ–π –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ ===")

    home_page = page_factory.create_page(DecoratorAmazonHomePage)
    home_page.open()

    instructions = home_page.get_wifi_instructions_from_home()

    assert instructions is not None, "–î–µ–∫–æ—Ä–∞—Ç–æ—Ä –Ω–µ –≤–µ—Ä–Ω—É–ª –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏"
    assert len(instructions) > 0, "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø—É—Å—Ç—ã"

    logging.info("‚úÖ –î–µ–∫–æ—Ä–∞—Ç–æ—Ä –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–ø–æ–ª–Ω–∏–ª –Ω–∞–≤–∏–≥–∞—Ü–∏—é –∫ WiFi Help")
    logging.info(f"üìã –ü–æ–ª—É—á–µ–Ω—ã –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏: {instructions[:50]}...")


def test_breadcrumb_navigation_with_history_tracking(page_factory):
    """
    –¢–µ—Å—Ç breadcrumb –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ–º –∏—Å—Ç–æ—Ä–∏–∏
    """
    logging.info("=== –¢–µ—Å—Ç breadcrumb –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ —Å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ–º –∏—Å—Ç–æ—Ä–∏–∏ ===")

    home_page = page_factory.create_page(BreadcrumbAmazonHomePage)
    home_page.open()

    account_page = home_page.go_to_account()
    digital_services_page = account_page.go_to_digital_services()
    fire_tablets_page = digital_services_page.go_to_fire_tablets()
    wifi_help_page = fire_tablets_page.go_to_wifi_help()

    journey_info = wifi_help_page.get_wifi_instructions_with_journey_info()

    assert 'navigation_journey' in journey_info, "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—É—Ç–∏"
    assert 'success_metrics' in journey_info, "–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –º–µ—Ç—Ä–∏–∫–∏ —É—Å–ø–µ—Ö–∞"

    navigation_summary = journey_info['navigation_journey']
    success_metrics = journey_info['success_metrics']

    assert success_metrics['reached_target'] == True, "–¶–µ–ª—å –Ω–µ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–∞"
    assert success_metrics['steps_taken'] > 0, "–®–∞–≥–∏ –Ω–µ –æ—Ç—Å–ª–µ–∂–µ–Ω—ã"

    logging.info(f"üìä –ü—É—Ç—å –Ω–∞–≤–∏–≥–∞—Ü–∏–∏: {navigation_summary['path']}")
    logging.info(f"‚è±Ô∏è –í—Ä–µ–º—è: {navigation_summary['duration']}")

